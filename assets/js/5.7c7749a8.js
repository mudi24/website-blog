(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{271:function(t,s,a){t.exports=a.p+"assets/img/all-design-mode.3c748c50.png"},272:function(t,s,a){t.exports=a.p+"assets/img/abstract-factory.14785049.png"},313:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("img",{attrs:{src:a(271),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("【JavaScript设计模式】是我阅读掘金小册 "),n("a",{attrs:{href:"https://juejin.cn/book/6844733790204461070",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 设计模式核⼼原理与应⽤实践"),n("OutboundLink")],1),t._v(" 后获得的收获。JavaScript设计模式大致可以分为三类，"),n("strong",[t._v("创建型")]),t._v("，"),n("strong",[t._v("结构型")]),t._v("，"),n("strong",[t._v("行为型")]),t._v("，我也会按照这样的顺序进行学习并写文章记录。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 创建型模式封装了创建对象过程中的变化，它做的事情就是"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("将创建对象的过程抽离")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 结构型模式封装的是"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("对象之间组合方式的变化")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，目的在于灵活地表达对象间的配合与依赖关系   \n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 行为型模式则是"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("将对象千变万化的行为进行抽离")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，确保我们能够更安全、更方便地对行为进行更改\n")])])]),n("blockquote",[n("p",[t._v("面试官常常会问：你知道哪些设计模式？有没有在实战中使用过？看完这个系列，你就可以在面试官侃侃而谈。")])]),t._v(" "),n("p",[t._v("设计模式的基本原则："),n("strong",[t._v("软件实体（类、模块、函数）可以扩展，但是不可修改")]),t._v("。")]),t._v(" "),n("p",[t._v("本文是这个系列的第一篇文章，主要学习的是工厂模式，将按照从易到难的顺序，从"),n("strong",[t._v("构造器模式")]),t._v("到"),n("strong",[t._v("简单工厂模式")]),t._v("，再到"),n("strong",[t._v("抽象工厂模式")]),t._v("进行学习。")]),t._v(" "),n("h2",{attrs:{id:"设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),n("h3",{attrs:{id:"为什么会出现设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么会出现设计模式"}},[t._v("#")]),t._v(" 为什么会出现设计模式？")]),t._v(" "),n("p",[t._v("我们开发一个业务，随着业务的不断迭代和扩展，代码量会变得无比庞大，逻辑也会变得非常复杂。这一点相信大家在工作中已经深有体会，如果不使用一些方法进行控制，那么最终会变得无法维护并且不可扩展。")]),t._v(" "),n("p",[t._v("而设计模式就是用来解决这些问题的，设计模式通过"),n("strong",[t._v("将变与不变分离，确保变化的部分灵活、不变的部分稳定")]),t._v("，来帮助我们写出“健壮”的代码，保证代码的可扩展性和高维护性。")]),t._v(" "),n("h3",{attrs:{id:"javascript-设计模式的原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-设计模式的原则"}},[t._v("#")]),t._v(" JavaScript 设计模式的原则")]),t._v(" "),n("p",[t._v("在JavaScript 设计模式中，主要用到的设计模式基本都围绕“"),n("strong",[t._v("单一功能")]),t._v("”和“"),n("strong",[t._v("开放封闭")]),t._v("”这两个原则来展开。接下来让我们了解一下这两个原则在设计模式中的实践。")]),t._v(" "),n("h2",{attrs:{id:"构造器模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造器模式"}},[t._v("#")]),t._v(" 构造器模式")]),t._v(" "),n("p",[t._v("需求：录入新员工信息")]),t._v(" "),n("p",[t._v("这个模式大家是非常熟悉的，我们平时使用的构造函数就是应用了构造器模式。"),n("br"),t._v("\n像 User 这样当新建对象的内存被分配后，用来"),n("code",[t._v("初始化该对象")]),t._v("的特殊函数，就叫做"),n("strong",[t._v("构造器")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("User")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" career")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("career "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" career \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在使用构造器模式的时候，我们本质上是去抽象了每个对象实例的"),n("code",[t._v("变与不变")]),t._v("。每个对象都具备 "),n("code",[t._v("name")]),t._v(" 、"),n("code",[t._v("age")]),t._v("、"),n("code",[t._v("career")]),t._v("这些属性，是不变的；而name、age、career 各自的值是不同的，这是变化的。")]),t._v(" "),n("blockquote",[n("p",[t._v("构造器模式和构造函数的命名是非常类似的，那么到底是先有了构造器模式，才有了构造函数，还是有了构造函数之后才有了构造器的模式。这个问题就像是先有鸡还是先有蛋的问题，谜底是什么我们不得而知，有兴趣的小伙伴可以自己去探索一下。")])]),t._v(" "),n("p",[t._v("构造器模式和工厂模式本质还是相同的。"),n("strong",[t._v("构造器模式解决的是多个对象实例的问题，工厂模式解决的是多个类的问题。")]),t._v(" 构造器处理的是对象实例的变与不变，工厂模式处理的是构造函数的变与不变。")]),t._v(" "),n("h2",{attrs:{id:"工厂模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工厂模式"}},[t._v("#")]),t._v(" 工厂模式")]),t._v(" "),n("p",[t._v("需求：为不同的工种添加不同的职能")]),t._v(" "),n("p",[t._v("工厂模式其实就是"),n("strong",[t._v("将创建对象的过程单独封装")]),t._v("。使用工厂模式时，我们要做的就是去抽象不同构造函数（类）之间的"),n("strong",[t._v("变与不变")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("应用场景")]),t._v("：在使用构造函数的地方，我们就应该想到工厂模式；在写了"),n("strong",[t._v("大量构造函数")]),t._v("、调用了"),n("strong",[t._v("大量的 "),n("code",[t._v("new")])]),t._v(" 的时候。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("User")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" career"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" work")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("career "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" career \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("work "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" work\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Factory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" career")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" work\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("career"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coder'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      work "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'写代码'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'写系分'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修Bug'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'product manager'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      work "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'订会议室'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'写PRD'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'催更'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boss'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      work "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'喝茶'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'看报'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'见客户'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其它工种的职责分配")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" career"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" work"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("使用工厂模式 1.0 写出来的代码依然有局限性，随着业务的推移，员工职责可能会频繁变动和修改，那么频繁在这里进行改动对于整个团队都是不友好的。")]),t._v(" "),n("p",[t._v("这个时候就需要用到工厂模式 2.0 了，把每个不同的模块都独立出来，各自负责自己的功能，互不影响。这样就可以保证软件的高扩展性和可维护性。")]),t._v(" "),n("h3",{attrs:{id:"抽象工厂模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抽象工厂模式"}},[t._v("#")]),t._v(" 抽象工厂模式")]),t._v(" "),n("p",[t._v("这里强烈推荐掘金小册中的 "),n("a",{attrs:{href:"https://juejin.cn/book/6844733790204461070/section/6844733790263197710",target:"_blank",rel:"noopener noreferrer"}},[t._v("抽象工厂模式"),n("OutboundLink")],1),t._v("，这一章写的实在太好了，推荐大家去看一下。下面我直接借用了作者的例子。这个例子的篇幅有点长，希望大家可以耐心看完，相信会对你有所帮助。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(272),alt:"抽象产品模式"}})]),t._v(" "),n("blockquote",[n("p",[t._v("大家可以结合我画的这幅图进行阅读，更便于理解")])]),t._v(" "),n("p",[t._v("大家知道一部智能手机的基本组成是操作系统（OS）和硬件（HardWare）组成。假设我们现在是一个手机厂商，那么我们就需要有生产操作系统的厂商和生产硬件的厂商，才可以量产手机。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MobilePhoneFactory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提供操作系统的接口")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createOS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"抽象工厂方法不允许直接调用，你需要将我重写！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提供硬件的接口")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"抽象工厂方法不允许直接调用，你需要将我重写！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("上面这个类的功能只有一个，就是约定手机流水线的通用能力。如果你想要 new 一个 "),n("code",[t._v("MobilePhoneFactory")]),t._v(" 实例，并尝试调用它的实例方法，它会提醒你“我是 Boss，不是让你用来 new 一个实例的”。在抽象工厂模式里，上面这个类就处于我们食物链最顶端的位置，我们称之为 "),n("code",[t._v("AbstractFactory")]),t._v("（"),n("strong",[t._v("抽象工厂")]),t._v("）。")]),t._v(" "),n("p",[t._v("说完抽象工厂，再来说一下抽象工厂的下游——"),n("strong",[t._v("具体工厂")]),t._v("（"),n("code",[t._v("ConcreteFactory")]),t._v("）。抽象工厂已经规划好了公司的流水线，那么具体工厂就是用来实现具体的功能，生成各自的软件和硬件。比如我现在想要一个专门生产 Android 系统 + 高通硬件的手机的生产线，我们给这类手机型号起名叫 FakeStar，那我就可以为 FakeStar 定制一个具体工厂：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体工厂继承自抽象工厂")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FakeStarFactory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MobilePhoneFactory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createOS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提供安卓系统实例")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AndroidOS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提供高通硬件实例")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QualcommHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这里我们的 FakeStar 工厂调用了两个构造函数：AndroidOS 和 QualcommHardWare，它们分别用于生成具体的操作系统和硬件实例。像这种被我们拿来用于 new 出具体对象的类，叫做"),n("strong",[t._v("具体产品类")]),t._v("（"),n("code",[t._v("ConcreteProduct")]),t._v("）。具体产品类往往不会孤立存在，不同的具体产品类往往有着共同的功能，比如安卓系统类和苹果系统类，它们都是操作系统，都有可以"),n("strong",[t._v("操控手机硬件系统")]),t._v("基本的功能。因此我们可以用一个"),n("strong",[t._v("抽象产品（"),n("code",[t._v("AbstractProduct")]),t._v("）类")]),t._v("来声明这一类产品应该具有的基本功能。（这里的具体产品类和抽象产品类也是这个设计模式的一部分，下文会有解释的）")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义操作系统这类产品的抽象产品类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("controlHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'抽象产品方法不允许直接调用，你需要将我重写！'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义具体操作系统的具体产品类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AndroidOS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("controlHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我会用安卓的方式去操作硬件'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppleOS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("controlHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我会用🍎的方式去操作硬件'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义手机硬件这类产品的抽象产品类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HardWare")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手机硬件的共性方法，这里提取了“根据命令运转”这个共性")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("operateByOrder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'抽象产品方法不允许直接调用，你需要将我重写！'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("硬件类产品同理：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义具体硬件的具体产品类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QualcommHardWare")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HardWare")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("operateByOrder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我会用高通的方式去运转'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MiWare")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HardWare")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("operateByOrder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我会用小米的方式去运转'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("好了，手机流水线和软件硬件都准备好了，当我们需要生产一台FakeStar手机时，只需要这样做：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是我的手机")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myPhone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FakeStarFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让它拥有操作系统")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myOS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myPhone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createOS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让它拥有硬件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myHardWare "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myPhone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动操作系统(输出‘我会用安卓的方式去操作硬件’)")]),t._v("\nmyOS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("controlHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 唤醒硬件(输出‘我会用高通的方式去运转’)")]),t._v("\nmyHardWare"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("operateByOrder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("关键时刻来了——假如有一天，FakeStar过气了，我们需要生产一款新机投入市场，这时候我们"),n("strong",[t._v("不需要对抽象工厂MobilePhoneFactory做任何修改")]),t._v("，只需要拓展一条新的手机生产线即可。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("newStarFactory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MobilePhoneFactory")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createOS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 操作系统实现代码")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHardWare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 硬件实现代码")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们新的流水线"),n("strong",[t._v("对原有的系统不会造成任何潜在影响")]),t._v("，所谓的“对拓展开放，对修改封闭”就这么圆满实现了。前面我们之所以要实现"),n("strong",[t._v("抽象产品类")]),t._v("，也是同样的道理。")]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("同样是工厂模式，抽象工厂和简单工厂的思路有哪些异同呢？")]),t._v(" "),n("p",[t._v("两者的共同点，在于都"),n("strong",[t._v("尝试去分离一个系统中变与不变的部分")]),t._v("。它们的不同在于"),n("strong",[t._v("应用场景的复杂度")]),t._v("。")]),t._v(" "),n("ul",[n("li",[t._v("在简单工厂的使用场景里，处理的对象是一些逻辑简单，共性明显的类，故而不必苛求代码可扩展性。")]),t._v(" "),n("li",[t._v("但在抽象工厂是用来处理那些逻辑复杂，并且有很多种扩展性可能性的类，复杂多变的场景使得我们必须对"),n("strong",[t._v("共性")]),t._v("作更特别的处理、使用抽象类去降低扩展的成本，同时需要对类的性质作划分。")])]),t._v(" "),n("p",[t._v("所以抽象工厂模式就有了这样的四个关键角色：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("抽象工厂（抽象类，它不能被用于生成具体实例）：")]),t._v("  用于声明最终目标产品的共性。在一个系统里，抽象工厂可以有多个（大家可以想象我们的手机厂后来被一个更大的厂收购了，这个厂里除了手机抽象类，还有平板、游戏机抽象类等等），每一个抽象工厂对应的这一类的产品，被称为“产品族”。")]),t._v(" "),n("li",[n("strong",[t._v("具体工厂（用于生成产品族里的一个具体的产品）：")]),t._v("  继承自抽象工厂、实现了抽象工厂里声明的那些方法，用于创建具体的产品的类。")]),t._v(" "),n("li",[n("strong",[t._v("抽象产品（抽象类，它不能被用于生成具体实例）：")]),t._v("  上面我们看到，具体工厂里实现的接口，会依赖一些类，这些类对应到各种各样的具体的细粒度产品（比如操作系统、硬件等），这些具体产品类的共性各自抽离，便对应到了各自的抽象产品类。")]),t._v(" "),n("li",[n("strong",[t._v("具体产品（用于生成产品族里的一个具体的产品所依赖的更细粒度的产品）：")]),t._v("  比如我们上文中具体的一种操作系统、或具体的一种硬件等。")])]),t._v(" "),n("p",[t._v("学习设计模式也跟使用抽象工厂模式一样，当前对于我们的提升可能并不是很大；但是等到我们负责的业务越来越复杂，接手的工作也越来越多的时候，设计模式的重要性就会逐渐凸显出来。（怎么听起来像画饼？？？人只愿意相信自己愿意相信的东西，我相信学习设计模式会对我以后的职业生涯有所帮助，所以我就学习了）")])])}),[],!1,null,null,null);s.default=r.exports}}]);