(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{322:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[s._v("#")]),s._v(" NPM")]),s._v(" "),a("p",[s._v("NPM(Node Package Manager)是一个将 Node.js 的模块以包的形式组织和管理的工具。")]),s._v(" "),a("p",[s._v("Node.js 的模块大体上分为内置模块和其他模块，内置模块是 Node.js 默认集成的模块，它们不需要引用 JS 外部文件，而是通过import或require模块名引入。")]),s._v(" "),a("p",[s._v("Node.js 提供了一个叫module的内置模块，该模块包含了 Node.js 模块管理的信息，我们可以通过它获得当前版本的 Node.js 中的所有内置模块。")]),s._v(" "),a("h3",{attrs:{id:"引入-node-js-内置模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入-node-js-内置模块"}},[s._v("#")]),s._v(" 引入 node.js 内置模块")]),s._v(" "),a("p",[s._v("一次引入 node.js 的所有内置模块")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("builtinModules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("builtinModules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("也可以单独引入某个模块")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"引入-node-js-其他模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入-node-js-其他模块"}},[s._v("#")]),s._v(" 引入 node.js 其他模块")]),s._v(" "),a("ol",[a("li",[s._v("通过文件路径引入")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../a/foo.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("通过包的名称引入"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Vue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),a("p",[s._v("所以，Node.js 提供了一个包管理工具，能够让我们以包的形式发布某个或某些模块到网络上的共享仓库中。")]),s._v(" "),a("h2",{attrs:{id:"用-npm安装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用-npm安装包"}},[s._v("#")]),s._v(" 用 NPM安装包")]),s._v(" "),a("p",[s._v("Node.js 内置了 NPM ，所有我们安装好 Node.js 后就已经可以使用 NPM 了。\n查看 NPM 版本")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm -v\n")])])]),a("p",[s._v("通常我们需要先运行 "),a("code",[s._v("npm init -y")]),s._v(" 来快速生成一个配置文件 package.json。")]),s._v(" "),a("p",[s._v("然后运行命令下载我们需要的包，这里我们以moment来举例")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("npm install moment "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("save\n")])])]),a("blockquote",[a("p",[s._v("在执行npm install的时候加了一个--save参数，这个参数会在包安装成功后自动修改pacakge.json文件，在其中的"),a("code",[s._v("dependencies")]),s._v("属性中增加安装的包的名字和版本信息。")])]),s._v(" "),a("p",[s._v("而在其他人需要对我们的代码进行维护时，只需要运行 "),a("code",[s._v("npm install")]),s._v("命令就可以根据dependencies中的内容自动安装依赖的包，同时安装到 "),a("code",[s._v("node_modules")]),s._v("目录下。")]),s._v(" "),a("p",[s._v("接下来就可以在项目的任意位置引入刚才下载的模块")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" moment "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("requier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'moment'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("当我们通过包名引入模块时，Node.js会根据规则搜索模块所在的位置，它优先搜索当前目录下的node_modules目录，如果找不到，会递归向上搜索父级目录，直到找到或者到达操作系统的根目录为止。")]),s._v(" "),a("h2",{attrs:{id:"全局安装带命令行的包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局安装带命令行的包"}},[s._v("#")]),s._v(" 全局安装带命令行的包")]),s._v(" "),a("p",[s._v("有一些模块包提供了在终端执行的指令，可以在终端执行命令脚本。如果想要在命令行终端要能够执行脚本命令，我们就需要将它们安装到系统目录中。可以在 "),a("code",[s._v("npm install")]),s._v(" 后面添加参数"),a("code",[s._v("-g")]),s._v("，就可以达到我们想要的效果。")]),s._v(" "),a("p",[s._v("这里我们用 eslint 来举个栗子")]),s._v(" "),a("ol",[a("li",[s._v("下载 eslint")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("npm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("g install eslint\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("在终端运行"),a("code",[s._v("eslint --init")]),s._v(" 初始化一个.eslintrc.js配置")]),s._v(" "),a("li",[s._v("运行"),a("code",[s._v("eslint index.js")]),s._v("进行代码检查")])]),s._v(" "),a("h2",{attrs:{id:"npm-scripts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-scripts"}},[s._v("#")]),s._v(" NPM Scripts")]),s._v(" "),a("p",[s._v("NPM Scripts 是指在package.json文件中配置scripts属性，在其中指定脚本命令：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"eslint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint index.js"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("在 "),a("code",[s._v("scripts")]),s._v(" 中添加命令后，就可以直接运行"),a("code",[s._v("npm run eslint")]),s._v("来执行对应的命令。")]),s._v(" "),a("p",[s._v("NPM Scripts 能够执行对应的 Node 命令，是因为 NPM 在安装模块的时候，不仅将模块自身安装到node_modules目录下，还会在node_modules目录下创建一个.bin的子目录，将模块包中的命令行脚本安装到.bin目录下，并在 NPM Script 执行时设置系统的环境变量 PATH 包含node_modules/.bin目录，这样就能够正常执行脚本了。\n当我们执行"),a("code",[s._v("npm run eslint")]),s._v("时，就相当于执行了：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("node "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("node_modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("eslint index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n")])])]),a("h2",{attrs:{id:"npm-特殊命令-start、test、publish"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-特殊命令-start、test、publish"}},[s._v("#")]),s._v(" NPM 特殊命令 start、test、publish")]),s._v(" "),a("p",[s._v("大多数 NPM Scripts 命令都需要使用npm run 命令名来执行，但是少部分特殊名字的命令，可以省略run，直接用npm 命令名来执行。常见的是start和test命令。start命令通常用来启动项目，比如我们开发 Web 项目的时候，通常配置start命令来启动开发环境下的 HTTP 服务器。test命令通常用来配置项目的单元测试，启动单元测试框架，运行测试案例（test case）。")]),s._v(" "),a("p",[s._v("另外一些不在NPM Scripts中的命令，可以用来执行 NPM 自身的指令，如npm install命令，这是用来安装模块的指令，还有npm init命令，用来创建默认的package.json配置。其他常用的命令还有npm publish，用来发布或更新我们自己的模块包到 NPM 服务器。")]),s._v(" "),a("p",[s._v("这里我们要注意，这些 NPM 自身的指令不带run，但如果我们在scripts属性中定义同名的指令也可以。比如我们可以定义一个叫做install的NPM Scripts:")]),s._v(" "),a("p",[s._v('{\n...\n"scripts": {\n"install": "do something"\n}\n}\n这个时候，我们运行npm run install就是运行这个 scripts 命令而不是默认的npm install命令。')]),s._v(" "),a("p",[s._v("参考文章："),a("a",{attrs:{href:"https://juejin.cn/book/7133100888566005763/section/7133184801913176102",target:"_blank",rel:"noopener noreferrer"}},[s._v("包管理工具：NPM"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);