(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{291:function(t,e,n){"use strict";n.r(e);var a=n(14),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"html"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("必考：你是如何理解 HTML 语义化的？")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("举例法："),n("br"),t._v("\nHTML 语义化就是使用正确的标签（总结）段落就写 p 标签，标题就写 h1 标签，文章就写 article 标签，视频就写 video 标签，等等。")])]),t._v(" "),n("li",[n("p",[t._v("阐述法："),n("br"),t._v("\n首先讲以前的后台开发人员使用 table 布局，然后讲美工人员使用 div+css 布局，最后讲专业的前端会使用正确的标签进行页面开发。")])])])]),t._v(" "),n("li",[n("p",[t._v("meta viewport 是做什么用的，怎么写？")]),t._v(" "),n("ul",[n("li",[t._v("举例法，然后逐个解释每个单词的意思。")]),t._v(" "),n("li",[t._v("initial-scale 定义设备宽度与视口大小之间的缩放比率。")]),t._v(" "),n("li",[t._v("maximum-scale 定义缩放的最大值")]),t._v(" "),n("li",[t._v("minimum-scale 定义缩放的最小值")]),t._v(" "),n("li",[t._v("user-scalable 如果设置为 no，用户将不能放大或缩小网页。默认值为 yes。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(' <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1,user-scalable=no" />\n')])])])]),t._v(" "),n("li",[n("p",[t._v("你用过哪些 HTML 5 标签？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("举例法"),n("br"),t._v("\n平时如果只用 div 写页面你就完了，把你平时用到的 html5 标签列举出来即可，但是要注意如果这个标签的用法比较复杂，你要先看一下 MDN 的文档再说这个标签；如果你说出一个标签，却不知道它有哪些 API，那么你就会被扣分")])]),t._v(" "),n("li",[n("p",[t._v("内容相关：header、main、footer、article")])]),t._v(" "),n("li",[n("p",[t._v("功能相关：canvas、video、audio（处理后续问题）")])])])]),t._v(" "),n("li",[n("p",[t._v("H5 是什么？")]),t._v(" "),n("ul",[n("li",[t._v("阐述法："),n("br"),t._v("\n搜一下知乎就知道了，H5 表示移动端页面，反正不是 HTML5。")])])])]),t._v(" "),n("h2",{attrs:{id:"css"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("必考：两种盒模型分别说一下。")]),n("br"),t._v("\n先说两种盒模型分别怎么写，具体到代码。然后说你平时喜欢用 border box，因为更好用。（为什么更好？写起来更方便）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("必考：如何垂直居中？")]),n("br"),t._v("\n背代码 https://jscode.me/t/topic/1936")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("必考：flex 怎么用，常用属性有哪些？")]),n("br"),t._v("\n看 MDN（一个元素在左，两个元素在右： margin-left:auto）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("必考：BFC 是什么？")]),n("br"),t._v("\n块级格式化上下文"),n("br"),t._v("\n背 BFC 触发条件，MDN 写了。但是不用全部背下来")]),t._v(" "),n("ul",[n("li",[t._v("浮动元素（元素的 float 不是 none）")]),t._v(" "),n("li",[t._v("绝对定位元素（元素的 position 为 absolute 或 fixed）")]),t._v(" "),n("li",[t._v("行内块元素")]),t._v(" "),n("li",[t._v("overflow 值不为 visible 的块元素\n弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）")])])]),t._v(" "),n("li",[n("p",[t._v("CSS 选择器优先级")]),t._v(" "),n("ul",[n("li",[t._v("背人云亦云的答案（错答案、已过时）：https://www.cnblogs.com/xugang/archive/2010/09/24/1833760.html")]),t._v(" "),n("li",[t._v("看面试官脸色行事")]),t._v(" "),n("li",[t._v("方方给的三句话"),n("br"),t._v("\na. 越具体优先级越高"),n("br"),t._v("\nb. 同样优先级写在后面的覆盖写在前面的"),n("br"),t._v("\nc. !important 优先级最高，但是要少用")])])]),t._v(" "),n("li",[n("p",[t._v("清除浮动说一下\n把 .clearfix 添加到容器上，里面的子元素就会清除浮动")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(' .clearfix:after {\n    content: "";\n    display: block; /*或者 table*/\n    clear: both;\n }\n .clearfix {\n    zoom: 1; /* IE 兼容*/\n }\n')])])])])]),t._v(" "),n("h2",{attrs:{id:"js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("必考：ES 6 语法知道哪些，分别怎么用？")]),n("br"),t._v("\n举例法"),n("br"),t._v("\nlet、const、箭头函数、Promise、展开操作符、默认参数、import、export，见"),n("a",{attrs:{href:"https://fangyinghang.com/es-6-tutorials/",target:"_blank",rel:"noopener noreferrer"}},[t._v("方方整理的列表"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[t._v("必考 Promise、Promise.all、Promise.race 分别怎么用？")]),t._v(" "),n("ul",[n("li",[t._v("Promise 用法")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("   function fn(){\n       return new Promise((resolve, reject)=>{\n           成功时调用 resolve(数据)\n           失败时调用 reject(错误)\n       })\n   }\n   fn().then(success, fail).then(success2, fail2)\n")])])]),n("ul",[n("li",[t._v("Promise.all 用法")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Promise.all([promise1, promise2]).then(success1, fail1)\npromise1 和 promise2 都成功才会调用 success1\n")])])]),n("ul",[n("li",[t._v("Promise.race 用法")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Promise.race([promise1, promise2]).then(success1, fail1)\npromise1 和 promise2 只要有一个成功就会调用 success1\n")])])])]),t._v(" "),n("li",[n("p",[t._v("必考：手写函数防抖和函数节流")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("节流")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  // 节流（一段时间执行一次之后，就不执行第二次）\n  function throttle(fn, delay){\n      let canUse = true\n      return function(){\n        if(canUse){\n          fn.apply(this, arguments)\n          canUse = false\n          setTimeout(()=>canUse = true, delay)\n        }\n      }\n  }\n\n  const throttled = throttle(()=>console.log('hi'))\n  throttled()\n  throttled()\n")])])])]),t._v(" "),n("li",[n("p",[t._v("注意，有些地方认为节流函数不是立刻执行的，而是在冷却时间末尾执行的（相当于施法有吟唱时间），那样说也是对的。")])]),t._v(" "),n("li",[n("p",[t._v("防抖")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  // 防抖（一段时间会等，然后带着一起做了）\n  function debounce(fn, delay){\n      let timerId = null\n      return function(){\n        const context = this\n        if(timerId){window.clearTimeout(timerId)}\n        timerId = setTimeout(()=>{\n          fn.apply(context, arguments)\n          timerId = null\n        },delay)\n      }\n  }\n  const debounced = debounce(()=>console.log('hi'))\n  debounced()\n  debounced()\n")])])])]),t._v(" "),n("li",[n("p",[t._v("必考：手写 AJAX")]),t._v(" "),n("ul",[n("li",[t._v("完整版")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("   var request = new XMLHttpRequest()\n   request.open('GET', '/a/b/c?name=ff', true);\n   request.onreadystatechange = function () {\n       if(request.readyState === 4 && request.status === 200) {\n         console.log(request.responseText);\n       }\n   };\n   request.send();\n")])])]),n("ul",[n("li",[t._v("简化版")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("var request = new XMLHttpRequest()\nrequest.open('GET', '/a/b/c?name=ff', true)\nrequest.onload = ()=> console.log(request.responseText)\nrequest.send()\n")])])])]),t._v(" "),n("li",[n("p",[t._v("必考：这段代码里的 this 是什么？")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" fn()   this => window/global\n obj.fn()   this => obj\n fn.call(xx)    this => xx\n fn.apply(xx)   this => xx\n fn.bind(xx)    this => xx\n new Fn()   this => 新的对象\n fn = ()=> {}   this => 外面的 this\n")])])]),n("ul",[n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/23804247",target:"_blank",rel:"noopener noreferrer"}},[t._v("《this 的值到底是什么？一次说清楚》"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[n("p",[t._v("必考：闭包/立即执行函数是什么？")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22486908",target:"_blank",rel:"noopener noreferrer"}},[t._v("闭包"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22465092",target:"_blank",rel:"noopener noreferrer"}},[t._v("立即执行函数"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[n("p",[t._v("必考：什么是 JSONP，什么是 CORS，什么是跨域？")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22600501",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSONP"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("CORS"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[n("p",[t._v("常考：async/await 怎么用，如何捕获异常？"),n("br"),t._v(" "),n("a",{attrs:{href:"https://es6.ruanyifeng.com/?search=async&x=0&y=0#docs/async",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰的书"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[t._v("常考：如何实现深拷贝？"),n("br"),t._v("\n要点：")]),t._v(" "),n("ul",[n("li",[t._v("递归")]),t._v(" "),n("li",[t._v("判断类型")]),t._v(" "),n("li",[t._v("检查环（也叫循环引用）")]),t._v(" "),n("li",[t._v("需要忽略原型")])])]),t._v(" "),n("li",[n("p",[t._v("常考：如何用正则实现 trim()？")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("String.prototype.trim = function(){\n  return this.replace(/^\\s+|\\s+$/g, '')\n}\n")])])]),n("p",[t._v("//或者")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function trim(string){\n  return string.replace(/^\\s+|\\s+\\$/g, '')\n}\n")])])])]),t._v(" "),n("li",[n("p",[t._v("常考：不用 class 如何实现继承？用 class 又如何实现？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("不用 class")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function Animal(color){\n    this.color = color\n}\nAnimal.prototype.move = function(){} // 动物可以动\nfunction Dog(color, name){\n    Animal.call(this, color) // 或者 Animal.apply(this, arguments)\n    this.name = name\n}\n// 下面三行实现 Dog.prototype.__proto__ = Animal.prototype\nfunction temp(){}\ntemp.prototye = Animal.prototype\nDog.prototype = new temp()\n\nDog.prototype.constructor = Dog // 这行看不懂就算了，面试官也不问\nDog.prototype.say = function(){ console.log('汪')}\n\nvar dog = new Dog('黄色','阿黄')\n")])])])])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("class")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  class Animal{\n    constructor(color){\n      this.color = color\n    }\n    move(){}\n    }\n    class Dog extends Animal{\n      constructor(color, name){\n      super(color)\n      this.name = name\n    }\n    say(){}\n  }\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("常考：如何实现数组去重？")]),t._v(" "),n("ul",[n("li",[t._v("计数排序变形（hash）"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  unique = (array) => {\n    const hash = [];\n    for (let i = 0; i < array.length; i++) {\n      hash[array[i]] = true;\n    }\n    const result = [];\n    for (let k in hash) {\n      result.push(k);\n    }\n    return result;\n  };\n")])])]),t._v("缺点：只支持数字或者字符串数组，如果数组里面有对象，比如 array = [{number:1}, 2]，就会出错。")]),t._v(" "),n("li",[t._v("使用 Set（面试已经禁止这种了，因为太简单）"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  unique = (array) => {\n    return [...new Set(array)];\n    // 或者 return Array.from(new Set(array))\n  };\n")])])])]),t._v(" "),n("li",[t._v("使用 WeakMap（支持所有类型去重）"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  unique = (array) => {\n    let map = new Map();\n    let result = [];\n    for (let i = 0; i < array.length; i++) {\n      if (map.has(array[i])) {\n        // 判断 map 中是否已有该 key\n        continue;\n      } else {\n        // 如果 map 中没有该 key，就加入 result 中\n        map.set(array[i], true);\n        result.push(array[i]);\n      }\n    }\n    return result;\n  };\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("放弃：== 相关题目（反着答）"),n("br"),t._v("\n不要背，记不住，太复杂且没有规律")])]),t._v(" "),n("li",[n("p",[t._v("送命题：手写一个 Promise"),n("br"),t._v("\n提前写一遍，放在博客里，参考 https://juejin.im/post/5aafe3edf265da238f125c0a")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pending'")]),t._v("\n  succeed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  fail "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fulfilled'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("succeed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rejected'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fail")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("succeed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fail")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("succeed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" succeed\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fail "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fail\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：事件委托")]),t._v(" "),n("ul",[n("li",[t._v("简单版"),n("br"),t._v("\nbug 在于，如果用户点击的是 li 里面的 span，就没法触发 fn，这显然不对。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" ul.addEventListener('click', function(e){\n       if(e.target.tagName.toLowerCase() === 'li'){\n           fn() // 执行某个函数\n       }\n })\n")])])]),n("ul",[n("li",[t._v("高级版"),n("br"),t._v("\n思路是点击 span 后，递归遍历 span 的祖先元素看其中有没有 ul 里面的 li。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" function delegate(element, eventType, selector, fn) {\n       element.addEventListener(eventType, e => {\n         let el = e.target\n         while (!el.matches(selector)) {\n           if (element === el) {\n             el = null\n             break\n           }\n           el = el.parentNode\n         }\n         el && fn.call(el, e, el)\n       })\n       return element\n   }\n")])])])]),t._v(" "),n("li",[n("p",[t._v("曾考：用 mouse 事件写一个可拖曳的 div"),n("br"),t._v("\n参考代码：https://jsbin.com/caxorunapi/edit?html,js,output")])])]),t._v(" "),n("h2",{attrs:{id:"http"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：HTTP 状态码知道哪些？分别什么意思？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("2xx 表示成功")])]),t._v(" "),n("li",[n("p",[t._v("3xx 表示需要进一步操作")])]),t._v(" "),n("li",[n("p",[t._v("4xx 表示浏览器方面出错")])]),t._v(" "),n("li",[n("p",[t._v("5xx 表示服务器方面出错")])]),t._v(" "),n("li",[n("p",[t._v("状态码 100 表示继续，应继续其请求。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 200 表示响应成功。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 404 表示请求的资源不存在。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 201 表示请求成功， 并因此创建了新资源。 这通常是在 POST 请求或某些 PUT 请求之后发送的响应。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 301 表示请求永久重定向。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 302 表示请求临时重定向。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 304 Not Modified 文件未修改，可以直接使用缓存的文件。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 400 表示由于语法无效，服务器无法理解该请求。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 401 表示请求未经授权。 这个状态代码必须和 WWW - Authenticate 报头域一起使用。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 403 表示服务器收到请求， 但是拒绝提供服务。 服务器通常会在响应正文中给出不提供服务的原因。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 500 表示服务器发生不可预期的错误， 导致无法完成客户端的请求。")])]),t._v(" "),n("li",[n("p",[t._v("状态码 503 表示服务器当前不能够处理客户端的请求， 在一段时间之后， 服务器可能会恢复正常。")])])]),t._v(" "),n("ul",[n("li",[t._v("google 搜索 http status cat")])]),t._v(" "),n("ul",[n("li",[t._v("完整参考 http://www.runoob.com/http/http-status-codes.html")])])]),t._v(" "),n("li",[n("p",[t._v("大公司必考：HTTP 缓存有哪几种？")]),t._v(" "),n("ul",[n("li",[t._v("需要详细的了解 ETag、CacheControl、Expires 的异同")]),t._v(" "),n("li",[t._v("参考 https://imweb.io/topic/5795dcb6fb312541492eda8c")])]),t._v(" "),n("ul",[n("li",[t._v("答题要点：\n"),n("ul",[n("li",[t._v("ETag 是通过对比浏览器和服务器资源的特征值（如 MD5）来决定是否要发送文件内容，如果一样就只发送 304（not modified）（有请求）")]),t._v(" "),n("li",[t._v("Expires 是设置过期时间（绝对时间），但是如果用户的本地时间错乱了，可能会有问题")]),t._v(" "),n("li",[t._v("CacheControl: max-age=3600 是设置过期时长（相对时间），跟本地时间无关。（无请求）")])])])])]),t._v(" "),n("li",[n("p",[t._v("必考：GET 和 POST 的区别")]),t._v(" "),n("ul",[n("li",[t._v("简易答案\n"),n("ul",[n("li",[t._v("POST 安全，GET 不安全（都不安全）")]),t._v(" "),n("li",[t._v("GET url 有长度限制，POST 没有（浏览器有长度限制）")]),t._v(" "),n("li",[t._v("GET 参数放在 url 中，POST 参数放到请求体中")]),t._v(" "),n("li",[t._v("GET 只需要一个报文（请求头），POST 需要两个以上（请求头和请求体）")]),t._v(" "),n("li",[t._v("GET 幂等，POST 不幂等（结果是否相同）")])])])]),t._v(" "),n("ul",[n("li",[t._v("错解，但是能过面试\n"),n("ul",[n("li",[t._v("GET 在浏览器回退时是无害的，而 POST 会再次提交请求。")]),t._v(" "),n("li",[t._v("GET 产生的 URL 地址可以被加入收藏栏，而 POST 不可以。")]),t._v(" "),n("li",[t._v("GET 请求会被浏览器主动 cache，而 POST 不会，除非手动设置。")]),t._v(" "),n("li",[t._v("GET 请求只能进行 url 编码，而 POST 支持多种编码方式。")]),t._v(" "),n("li",[t._v("GET 请求参数会被完整保留在浏览器历史记录里，而 POST 中的参数不会被保留。")]),t._v(" "),n("li",[t._v("GET 请求在 URL 中传送的参数是有长度限制的，而 POST 没有。")]),t._v(" "),n("li",[t._v("对参数的数据类型，GET 只接受 ASCII 字符，而 POST 没有限制。")]),t._v(" "),n("li",[t._v("GET 比 POST 更不安全，因为参数直接暴露在 URL 上，所以不能用来传递敏感信息。")]),t._v(" "),n("li",[t._v("GET 参数通过 URL 传递，POST 放在 Request body 中。\n正解")])])]),t._v(" "),n("li",[t._v("就一个区别：语义——GET 用于获取资源，POST 用于提交资源。")]),t._v(" "),n("li",[t._v("想装逼请参考 https://zhuanlan.zhihu.com/p/22536382")])])]),t._v(" "),n("li",[n("p",[t._v("Cookie V.S. LocalStorage V.S. SessionStorage V.S. Session")]),t._v(" "),n("ul",[n("li",[t._v("Cookie V.S. LocalStorage\n主要区别是 Cookie 会被发送到服务器，而 LocalStorage 不会\nCookie 一般最大 4k，LocalStorage 可以用 5Mb 甚至 10Mb（各浏览器不同）")]),t._v(" "),n("li",[t._v("LocalStorage V.S. SessionStorage\nLocalStorage 一般不会自动过期（除非用户手动清除），而 SessionStorage 在回话结束时过期（如关闭浏览器）")]),t._v(" "),n("li",[t._v("Cookie V.S. Session\nCookie 存在浏览器的文件里，Session 存在服务器的文件里\nSession 是基于 Cookie 实现的，具体做法就是把 SessionID 存在 Cookie 里")])])]),t._v(" "),n("li",[n("p",[t._v("HTTP2 与 HTTP1 的区别")]),t._v(" "),n("ul",[n("li",[t._v("多路复用（MultiPlexing），即连接共享，即每一个 request 都是是用作连接共享机制的。一个 request 对应一个 id，这样一个连接上可以有多个 request，每个连接的 request 可以随机的混杂在一起，接收方可以根据 request 的 id 将 request 再归属到各自不同的服务端请求里面。")]),t._v(" "),n("li",[t._v("服务端推送（server push），同 SPDY 一样，HTTP2.0 也具有 server push 功能。")]),t._v(" "),n("li",[t._v("HTTP 2 默认开启 HTTPS")])])])]),t._v(" "),n("h2",{attrs:{id:"vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：watch 和 computed 和 methods 区别是什么？")]),t._v(" "),n("ul",[n("li",[t._v("思路：先翻译单词，再阐述作用，最后强行找不同。")]),t._v(" "),n("li",[t._v("要点：\n"),n("ul",[n("li",[t._v("computed 和 methods 相比，最大区别是 computed 有缓存：如果 computed 属性依赖的属性没有变化，那么 computed 属性就不会重新计算。methods 则是看到一次计算一次。")]),t._v(" "),n("li",[t._v("watch 和 computed 相比，computed 是计算出一个属性（废话），而 watch 则可能是做别的事情（如上报数据）")])])])])]),t._v(" "),n("li",[n("p",[t._v("必考：Vue 有哪些生命周期钩子函数？分别有什么用？")]),t._v(" "),n("ul",[n("li",[t._v("钩子在文档全都有，看红色的字。")]),t._v(" "),n("li",[t._v("把名字翻译一遍就是满分")]),t._v(" "),n("li",[t._v("要特别说明哪个钩子里请求数据，答案是 mounted")])])]),t._v(" "),n("li",[n("p",[t._v("必考：Vue 如何实现组件间通信？")]),t._v(" "),n("ul",[n("li",[t._v("父子组件：使用 v-on 通过事件通信"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$on('xxx',function(){})\n$emit('xxx',data)\n")])])])]),t._v(" "),n("li",[t._v("爷孙组件：使用两次 v-on 通过爷爷爸爸通信，爸爸儿子通信实现爷孙通信")]),t._v(" "),n("li",[t._v("任意组件：使用 eventBus = new Vue() 来通信，eventBus.$on 和 eventBus.$emit 是主要 API")]),t._v(" "),n("li",[t._v("任意组件：使用 Vuex 通信")])])]),t._v(" "),n("li",[n("p",[t._v("必考：Vue 数据响应式怎么做到的？")]),t._v(" "),n("ul",[n("li",[t._v("答案在文档"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《深入响应式原理》"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("要点\n"),n("ul",[n("li",[t._v("使用 Object.defineProperty 把这些属性全部转为 getter/setter")]),t._v(" "),n("li",[t._v("Vue 不能检测到对象属性的添加或删除，解决方法是手动调用 Vue.set 或者 this."),n("code",[t._v("$")]),t._v("set")])])])])]),t._v(" "),n("li",[n("p",[t._v("必考：Vue.set 是做什么用的？\n见上一题")])]),t._v(" "),n("li",[n("p",[t._v("Vuex 你怎么用的？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("背下文档第一句：Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式")])]),t._v(" "),n("li",[n("p",[t._v("说出核心概念的名字和作用：State/Getter/Mutation/Action/Module")])]),t._v(" "),n("li",[n("p",[t._v("State 唯一数据源")])]),t._v(" "),n("li",[n("p",[t._v("Getter state 的计算属性")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("   const store = new Vuex.Store({\n     state: {\n       todos: [\n         { id: 1, text: '...', done: true },\n         { id: 2, text: '...', done: false }\n       ]\n     },\n     getters: {\n       doneTodos: state => {\n         return state.todos.filter(todo => todo.done)\n       }\n     }\n   })\n   store.getters.doneTodos\n")])])])]),t._v(" "),n("li",[n("p",[t._v("Mutation 修改状态（同步）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" const store = new Vuex.Store({\n     state: {\n       count: 1\n     },\n     mutations: {\n       increment (state) {\n         // 变更状态\n         state.count++\n       }\n     }\n   })\n   store.commit('increment')\n")])])])]),t._v(" "),n("li",[n("p",[t._v("Action 提交 mutation（异步）")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" actions: {\n     incrementAsync ({ commit }) {\n       setTimeout(() => {\n         commit('increment')\n       }, 1000)\n     }\n }\n store.dispatch('increment')\n")])])])]),t._v(" "),n("li",[n("p",[t._v("Module 分割为模块")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" const moduleA = {\n     state: { ... },\n     mutations: { ... },\n     actions: { ... },\n     getters: { ... }\n }\n const moduleB = {\n     state: { ... },\n     mutations: { ... },\n     actions: { ... }\n }\n const store = new Vuex.Store({\n     modules: {\n       a: moduleA,\n       b: moduleB\n     }\n })\n store.state.a // -> moduleA 的状态\n store.state.b // -> moduleB 的状态\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("VueRouter 你怎么用的？")]),t._v(" "),n("ul",[n("li",[t._v("Vue Router 是 Vue.js 官方的路由管理器。")]),t._v(" "),n("li",[t._v("History 模式/导航守卫/路由懒加载")]),t._v(" "),n("li",[t._v("常用 API：router-link、router-view、this.$router.push、this.$router.replace、this."),n("code",[t._v("$")]),t._v("route.params")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("this.$router.push('/user-admin') // 向 history 栈添加一个新的记录，当用户点击浏览器后退按钮时，则回到之前的 URL。\nthis.$router.replace('/user-admin') // 不会向 history 添加新记录，而是替换掉当前的 history 记录。\nthis.$route.params // 包含了动态片段和全匹配片段的对象，如果没有路由参数，就是一个空对象。\n")])])])]),t._v(" "),n("li",[n("p",[t._v("路由守卫是什么？\n“导航”表示路由正在发生改变。导航守卫主要用来通过跳转或取消的方式守卫导航")]),t._v(" "),n("ul",[n("li",[t._v("全局前置守卫（router.beforeEach） 登录验证")]),t._v(" "),n("li",[t._v("全局解析守卫（router.beforeResolve） 在导航被确认之前，在所有组件内守卫和异步路由组件被解析之后")]),t._v(" "),n("li",[t._v("全局后置钩子（router.afterEach） 路由跳转完成后触发")]),t._v(" "),n("li",[t._v("路由独享的守卫（beforeEnter） beforeEnter 在 beforeEach 之后紧随执行")]),t._v(" "),n("li",[t._v("组件内的守卫"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("beforeRouteEnter  // 在全局守卫beforeEach和独享守卫beforeEnter之后，全局beforeResolve和全局afterEach之前调用\nbeforeRouteUpdate  // 当前路由改变，并且该组件被复用时调用\nbeforeRouteLeave  // 导航离开该组件的对应路由时调用\n")])])])])]),t._v(" "),n("ul",[n("li",[t._v("https://juejin.im/post/5d639ecb5188255d7d6517fb")])])])]),t._v(" "),n("h2",{attrs:{id:"react"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：受控组件 V.S. 非受控组件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<FInput value={x} onChange={fn}/> 受控组件\n<FInput defaultValue={x} ref={input}/> 非受控组件\n")])])]),n("p",[t._v("区别：受控组件的状态由开发者维护，非受控组件的状态由组件自身维护（不受开发者控制）")])]),t._v(" "),n("li",[n("p",[t._v("必考：React 有哪些生命周期函数？分别有什么用？（Ajax 请求放在哪个阶段？）")]),t._v(" "),n("ul",[n("li",[t._v("constructor() 初始化 state 和 props")]),t._v(" "),n("li",[t._v("render() 渲染（必须执行）")]),t._v(" "),n("li",[t._v("componentDidMount() 请求数据")]),t._v(" "),n("li",[t._v("componentDidUpdate() 视图更新后执行")]),t._v(" "),n("li",[t._v("componentWillUnmount() 组件被移除页面并销毁")]),t._v(" "),n("li",[t._v("shouldComponentUpdate() 组件是否更新 UI")])])]),t._v(" "),n("li",[n("p",[t._v("必考：React 如何实现组件间通信？")]),t._v(" "),n("ul",[n("li",[t._v("父子靠 props 传函数")]),t._v(" "),n("li",[t._v("爷孙可以穿两次 props")]),t._v(" "),n("li",[t._v("任意组件用 Redux（也可以自己写一个 eventBus）")])])]),t._v(" "),n("li",[n("p",[t._v("必考：shouldComponentUpdate 有什么用？")]),t._v(" "),n("ul",[n("li",[t._v("要点：用于在没有必要更新 UI 的时候返回 false，以提高渲染性能")]),t._v(" "),n("li",[t._v("参考：http://taobaofed.org/blog/2016/08/12/optimized-react-components/")])])]),t._v(" "),n("li",[n("p",[t._v("必考：虚拟 DOM 是什么？")]),t._v(" "),n("ul",[n("li",[t._v("要点：虚拟 DOM 就是用来模拟 DOM 的一个对象，这个对象拥有一些重要属性，并且更新 UI 主要就是通过对比（DIFF）旧的虚拟 DOM 树和新的虚拟 DOM 树的区别完成的。")]),t._v(" "),n("li",[t._v("参考：http://www.alloyteam.com/2015/10/react-virtual-analysis-of-the-dom/")])])]),t._v(" "),n("li",[n("p",[t._v("必考：什么是高阶组件？")]),t._v(" "),n("ul",[n("li",[t._v("要点：文档原话——高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件。")]),t._v(" "),n("li",[t._v("举例：React-Redux 里 connect 就是一个高阶组件，比如 connect(mapState)(MyComponent) 接受组件 MyComponent，返回一个具有状态的新 MyComponent 组件。")])])]),t._v(" "),n("li",[n("p",[t._v("React diff 的原理是什么？\n看你记忆力了：https://imweb.io/topic/579e33d693d9938132cc8d94")])]),t._v(" "),n("li",[n("p",[t._v("必考 Redux 是什么？")]),t._v(" "),n("ul",[n("li",[t._v("Redux 是 JavaScript 状态容器，提供可预测化的状态管理。重点是『状态管理』。")]),t._v(" "),n("li",[t._v("Action/Reducer/Store/单向数据流"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Store  唯一数据源\nAction  描述一个事件以及必要参数（对象）\nReducer  根据Action对数据进行操作（函数）\n")])])])]),t._v(" "),n("li",[t._v("常用 API：store.dispatch(action)/store.getState()"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const store = createStore(todos, ['Use Redux'])\nstore.dispatch({\n  type: 'ADD_TODO',\n  text: 'Read the docs'\n})\nstore.subscribe(() => {\n  this.setState({\n    items: store.getState().items;\n  });\n});\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("connect 的原理是什么？")]),t._v(" "),n("ul",[n("li",[t._v("react-redux 库提供的一个 API，connect 的作用是让你把组件和 store 连接起来，产生一个新的组件（connect 是高阶组件）"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("export default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter);\n")])])])]),t._v(" "),n("li",[t._v("参考：https://segmentfault.com/a/1190000017064759")])])])]),t._v(" "),n("h2",{attrs:{id:"typescript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),n("ol",[n("li",[t._v("never 类型是什么？\n不应该出现的类型")]),t._v(" "),n("li",[t._v("TypeScript 比起 JavaScript 有什么优点？\n提供了类型约束，因此更可控、更容易重构、更适合大型项目、更容易维护")])]),t._v(" "),n("h2",{attrs:{id:"webpack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" Webpack")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：有哪些常见 loader 和 plugin，你用过哪些？")]),t._v(" "),n("ul",[n("li",[t._v("loader\n"),n("ul",[n("li",[t._v("html: pug-loader markdown-loader")]),t._v(" "),n("li",[t._v("CSS: postcss-loader scss-loader less-loader style-loader")]),t._v(" "),n("li",[t._v("js: babel-loader")])])]),t._v(" "),n("li",[t._v("plugin\n"),n("ul",[n("li",[t._v("html: html-webpack-plugin")]),t._v(" "),n("li",[t._v("css: extract-text-plugin")])])])])]),t._v(" "),n("li",[n("p",[t._v("英语题：loader 和 plugin 的区别是什么？")])]),t._v(" "),n("li",[n("p",[t._v("必考：如何按需加载代码？\nimport('文件路径').then()")])]),t._v(" "),n("li",[n("p",[t._v("必考：如何提高构建速度？")]),t._v(" "),n("ul",[n("li",[t._v("code split")]),t._v(" "),n("li",[t._v("多入口情况下，使用 CommonsChunkPlugin 来提取公共代码")]),t._v(" "),n("li",[t._v("通过 externals 配置来提取常用库")]),t._v(" "),n("li",[t._v("利用 DllPlugin 和 DllReferencePlugin 预编译资源模块 通过 DllPlugin 来对那些我们引用但是绝对不会修改的 npm 包来进行预编译，再通过 DllReferencePlugin 将预编译的模块加载进来。")]),t._v(" "),n("li",[t._v("使用 Happypack 实现多线程加速编译")]),t._v(" "),n("li",[t._v("使用 webpack-uglify-parallel 来提升 uglifyPlugin 的压缩速度。 原理上 webpack-uglify-parallel 采用了多核并行压缩来提升压缩速度")]),t._v(" "),n("li",[t._v("使用 Tree-shaking 和 Scope Hoisting 来剔除多余代码")])])]),t._v(" "),n("li",[n("p",[t._v("转义出的文件过大怎么办？")]),t._v(" "),n("ul",[n("li",[t._v("提取公共的模块文件")]),t._v(" "),n("li",[t._v("压缩 js，css，图片")]),t._v(" "),n("li",[t._v("动态加载，按需加载（import()）")]),t._v(" "),n("li",[t._v("压缩代码。删除多余的代码、注释、简化代码的写法等等方式。可以利用 webpack 的 UglifyJsPlugin 和 ParallelUglifyPlugin 来压缩 JS 文件， 利用 cssnano（css-loader?minimize）来压缩 css")]),t._v(" "),n("li",[t._v("利用 CDN 加速。在构建过程中，将引用的静态资源路径修改为 CDN 上对应的路径。可以利用 webpack 对于 output 参数和各 loader 的 publicPath 参数来修改资源路径")]),t._v(" "),n("li",[t._v("删除死代码（Tree Shaking）。将代码中永远不会走到的片段删除掉。可以通过在启动 webpack 时追加参数--optimize-minimize 来实现\n上面五题请看这个不错的参考：https://zhuanlan.zhihu.com/p/44438844")])])])]),t._v(" "),n("h2",{attrs:{id:"安全"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：什么是 XSS？如何预防？\n比较复杂，看我的文章 https://zhuanlan.zhihu.com/p/22500730")])]),t._v(" "),n("li",[n("p",[t._v("必考：什么是 CSRF？如何预防？\n比较复杂，看若愚的文章 https://zhuanlan.zhihu.com/p/22521378")]),t._v(" "),n("p",[t._v("XSS 和 CSRF：https://ju7ejin.im/entry/5b4b56fd5188251b1a7b2ac1")])])]),t._v(" "),n("h2",{attrs:{id:"开放题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开放题目"}},[t._v("#")]),t._v(" 开放题目")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("必考：你遇到最难的问题是怎样的？\n要点：一波三折。参考 https://www.zhihu.com/question/35323603")])]),t._v(" "),n("li",[n("p",[t._v("你在团队的突出贡献是什么？\n把小事说大。带团队学习，定期分享")])]),t._v(" "),n("li",[n("p",[t._v("最近在关注什么新技术\n书、博客、推特、知乎，不要说 CSDN、百度。")])]),t._v(" "),n("li",[n("p",[t._v("有没有看什么源码，看了后有什么记忆深刻的地方，有什么收获")]),t._v(" "),n("ul",[n("li",[t._v("看过源码说源码，推荐看 underscore.js 的源码")]),t._v(" "),n("li",[t._v("没看过源码就说同事的代码，代码烂就说哪里烂，代码好就说哪里好")]),t._v(" "),n("li",[t._v("收获：命名规范、设计模式")])])])]),t._v(" "),n("h2",{attrs:{id:"刁钻题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#刁钻题目"}},[t._v("#")]),t._v(" 刁钻题目")]),t._v(" "),n("ol",[n("li",[t._v("代码\n"),n("code",[t._v("[1,2,3].map(parseInt)")]),t._v("\n答案:\n1 NaN NaN")]),t._v(" "),n("li",[t._v("代码\n"),n("code",[t._v("var a = {name: 'a'} a.x = a = {}")]),t._v("\n问 a.x 是多少？\n答案: undefined（a 已经改变了，拿不到最初的 a）")]),t._v(" "),n("li",[t._v("(a ==1 && a== 2 && a==3) 可能为 true 吗？")])]),t._v(" "),n("ul",[n("li",[t._v("利用 == 会调用 valueOf() 的特性")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n        var a = {\n          value: 1,\n          valueOf() {\n            return this.value++;\n          },\n        };\n        a == 1 && a == 2 && a == 3; // true\n\n")])])]),n("ul",[n("li",[n("p",[t._v("利用 a 会读取 window.a 的特性")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('    var value = 1;\n    Object.defineProperty(window, "a", {\n      get() {\n        return value++;\n      },\n    });\n    a == 1 && a == 2 && a == 3; // true\n    // 或者\n    a === 1 && a === 2 && a === 3; // true\n')])])])])]),t._v(" "),n("h2",{attrs:{id:"超纲题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#超纲题"}},[t._v("#")]),t._v(" 超纲题")]),t._v(" "),n("ol",[n("li",[t._v("JS 垃圾回收机制")])]),t._v(" "),n("ul",[n("li",[t._v("看图讲解 https://javascript.info/garbage-collection\n"),n("ul",[n("li",[t._v("什么是垃圾\n所有全局变量都不是垃圾\n没有被引用通常都是垃圾（环引用依然是垃圾）")]),t._v(" "),n("li",[t._v("如何捡垃圾（遍历和计数，只是不同的算法而已）\n标记清除算法")]),t._v(" "),n("li",[t._v("前端又有其特殊性（JS 进程和 DOM 进程）\n更深入一些的讲解 http://newhtml.net/v8-garbage-collection/")])])])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("Eventloop 说一下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    setTimeout(function () {\n      console.log(4);\n    }, 0);\n    new Promise(function (resolve) {\n      console.log(1);\n      resolve();\n      console.log(2);\n    }).then(function () {\n      console.log(5);\n    });\n\n    console.log(3);\n\n1;\n2;\n3;\n5;\n4;\n\n")])])])])]),t._v(" "),n("ul",[n("li",[t._v("肤浅理解：『一会儿』和『尽快』异步任务")]),t._v(" "),n("li",[t._v("详细理解：Eventloop 是个啥？")]),t._v(" "),n("li",[t._v("浏览器有 Eventloop 吗？")]),t._v(" "),n("li",[t._v("每个 API 对应哪个任务队列？\n"),n("ul",[n("li",[t._v("setTimeout")]),t._v(" "),n("li",[t._v("setImmediate（浏览器没有）")]),t._v(" "),n("li",[t._v("process.nextTick（浏览器没有）")]),t._v(" "),n("li",[t._v("MutationObserver（Node 没有）")]),t._v(" "),n("li",[t._v("promise.then")]),t._v(" "),n("li",[t._v("await")])])]),t._v(" "),n("li",[t._v("这种题目尽量说思路，因为你不可能通过眼睛看出结果（必须画图）")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\n        async function async1() {\n          console.log(1);\n          await async2();\n          console.log(2);\n        }\n        async function async2() {\n          console.log(3);\n        }\n\n        async1();\n\n        new Promise(function (resolve) {\n          console.log(4);\n          resolve();\n        }).then(function () {\n          console.log(5);\n        });\n\n1;\n3;\n4;\n2;\n5;\n\n")])])]),n("p",[t._v("注意：这一题的答案不唯一，在 Node.js 和 Chrome 的结果不一样，甚至在 Chrome 上也是时而这个答案，时而那个答案。所以还是说思路最重要。")]),t._v(" "),n("h2",{attrs:{id:"个性化题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#个性化题目"}},[t._v("#")]),t._v(" 个性化题目")]),t._v(" "),n("ul",[n("li",[t._v("PWA")]),t._v(" "),n("li",[t._v("echarts.js / d3.js")]),t._v(" "),n("li",[t._v("three.js")]),t._v(" "),n("li",[t._v("flutter")]),t._v(" "),n("li",[t._v("SSR\n做个 hello world 基本就能应付面试了，如果怕应付不了，就再做个复杂点的。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);