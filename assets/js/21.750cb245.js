(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{296:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vue-3-和-vue-2-的-watch-有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-和-vue-2-的-watch-有什么不同"}},[t._v("#")]),t._v(" Vue 3 和 Vue 2 的 watch 有什么不同")]),t._v(" "),s("h3",{attrs:{id:"watch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[t._v("#")]),t._v(" watch")]),t._v(" "),s("p",[t._v("watch 可以监听一个或多个响应式数据， 一旦数据变化， 就自动执行监听回调， 如果监听 rective 对象中的属性， 必须通过函数来指定， 如果监听多个数据，需要使用数组来指定，默认初始时不执行回调，当可以通过配置 immediate 未 true，来指定初始时立即执行第一次，通过配置 deep 为 true，来指定深度监听。")]),t._v(" "),s("h4",{attrs:{id:"watch-prop-newvalue-oldvalue-监听新旧属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watch-prop-newvalue-oldvalue-监听新旧属性"}},[t._v("#")]),t._v(" watch（prop, (newValue, oldValue) => {}）监听新旧属性")]),t._v(" "),s("h4",{attrs:{id:"watch-监听对象中的一个属性或多个属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watch-监听对象中的一个属性或多个属性"}},[t._v("#")]),t._v(" watch 监听对象中的一个属性或多个属性")]),t._v(" "),s("h3",{attrs:{id:"watcheffect-用到那个属性就会监听那个属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watcheffect-用到那个属性就会监听那个属性"}},[t._v("#")]),t._v(" watchEffect 用到那个属性就会监听那个属性")]),t._v(" "),s("p",[t._v("watchEffect 可以不用直接指定要监听的数据，回调函数中使用的那些响应式数据就监听那些响应式数据，默认初始时就会执行第一次。")]),t._v(" "),s("h3",{attrs:{id:"如何绑定多个-ref-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何绑定多个-ref-对象"}},[t._v("#")]),t._v(" 如何绑定多个 ref 对象")]),t._v(" "),s("ol",[s("li",[t._v("在setup中定义一个常量xxxrefs用来接受所有for循环设置ref的元素，ref中必须要是空数组")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uploadRefs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("页面中for循环中必须要用el = > {inputs[index] = el}绑定input元素的ref值（将所有的ref元素放到数组中）")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"el=>{uploadRefs[index]=el}"')]),t._v("\n")])])]),s("p",[t._v("3、JS中，通过索引获取对应的ref元素uploadRefs.value[index]")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("uploadRefs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xxxxx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);