(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{305:function(l,v,_){"use strict";_.r(v);var e=_(14),n=Object(e.a)({},(function(){var l=this,v=l.$createElement,_=l._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[_("ol",[_("li",[_("p",[l._v("表达式和语句")]),l._v(" "),_("ul",[_("li",[l._v("表达式\n"),_("ul",[_("li",[l._v("1 + 2 表达式的"),_("strong",[l._v("值")]),l._v("为 3")]),l._v(" "),_("li",[l._v("add(1,2) 表达式的值为函数的"),_("strong",[l._v("返回值")])]),l._v(" "),_("li",[l._v("console.log 表达式的值为函数本身")]),l._v(" "),_("li",[l._v("console.log(3) 表达式的值为 undefined")])])]),l._v(" "),_("li",[l._v("语句\n"),_("ul",[_("li",[l._v("var a = 1 是一个语句")])])]),l._v(" "),_("li",[l._v("区别\n"),_("ul",[_("li",[l._v("表达式"),_("strong",[l._v("一般都有值")]),l._v("，语句可以有也可以没有")]),l._v(" "),_("li",[l._v("语句一般是用来改变环境的（"),_("strong",[l._v("声明，赋值")]),l._v("）")])])]),l._v(" "),_("li",[l._v("注意："),_("strong",[l._v("return 后面")]),l._v("不能加回车")])])]),l._v(" "),_("li",[_("p",[l._v("标识符的规则")]),l._v(" "),_("ul",[_("li",[l._v("第一个字符可以是 Unicode 字母 或者 $ 或者 _ 或者 中文")]),l._v(" "),_("li",[l._v("后面的字符包括上面的说有，还可以有数字")]),l._v(" "),_("li",[l._v("变量名是标识符，还有其他标识符")])])]),l._v(" "),_("li",[_("p",[l._v("if else 语句 / switch 语句")]),l._v(" "),_("ul",[_("li",[l._v("if else 语句\n"),_("ul",[_("li",[l._v("推荐写法："),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[l._v("if (表达式) {\n  语句\n} else if (表达式) {\n  语句\n} else {\n  语句\n}\n")])])])]),l._v(" "),_("li",[l._v("可以省略{}，但是省略后 if else 语句只会默认把后面的第一句放入{}内")])])])]),l._v(" "),_("ul",[_("li",[l._v("switch 语句\n"),_("ul",[_("li",[l._v("语法："),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[l._v('switch (fruit) {\n case "apple":\n   // ...\n   break;\n case "orange":\n   // ...\n   break;\n default:\n   // ...\n}\n')])])])])])])])]),l._v(" "),_("li",[_("p",[l._v("&& 与 ||")]),l._v(" "),_("ul",[_("li",[l._v("&& : A && B && C && D 取第一个假的值或者 D")]),l._v(" "),_("li",[l._v("|| : A || B || C || D 取第一个真的值或者 D")])])]),l._v(" "),_("li",[_("p",[l._v("while 语句 / for 语句")]),l._v(" "),_("ul",[_("li",[l._v("while 语句\n"),_("ul",[_("li",[l._v("语法：while (表达式) { 语句 }")])])]),l._v(" "),_("li",[l._v("for 语句\n"),_("ul",[_("li",[l._v("语法：for (语句 1;表达式 2;语句 3) { 循环体 }")])])])])]),l._v(" "),_("li",[_("p",[l._v("break 与 continue")]),l._v(" "),_("ul",[_("li",[l._v("break: 跳出所有循环")]),l._v(" "),_("li",[l._v("continue: 跳出当前一次循环")])])]),l._v(" "),_("li",[_("p",[l._v("label")]),l._v(" "),_("ul",[_("li",[l._v("语法：")])]),l._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[l._v(' foo: {\n   console.log(1);\n     break foo;\n     console.log("不执行")\n }\n console.log(2);\n')])])])])])])}),[],!1,null,null,null);v.default=n.exports}}]);