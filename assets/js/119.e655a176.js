(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{402:function(n,e,t){"use strict";t.r(e);var a=t(14),v=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("ol",[t("li",[t("p",[n._v("MVC")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("Model (数据) 负责操作所有数据")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" const m = {\n     data:{}\n }\n")])])])]),n._v(" "),t("li",[t("p",[n._v("View (视图) 负责所有 UI 界面")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" const v = {\n     el: null,\n     html:`\n       <div>\n         <button>点我</button>\n       </div>\n     `,\n     init(container){},\n     render(){}\n }\n")])])])]),n._v(" "),t("li",[t("p",[n._v("Controller (控制器) 负责其他")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" const c = {\n     init(container){},\n     events:{},\n     autoBindEvents(){}\n }\n")])])])])])]),n._v(" "),t("li",[t("p",[n._v("EventBus(事件总线)")]),n._v(" "),t("ul",[t("li",[n._v("对象间的通信，负责 Model,View,Controller 之间的通信。")])]),n._v(" "),t("ul",[t("li",[n._v("on 监听事件")])]),n._v(" "),t("ul",[t("li",[n._v("trigger 触发事件/emit 发送事件")])]),n._v(" "),t("ul",[t("li",[n._v("once 事件执行一次")])]),n._v(" "),t("ul",[t("li",[t("p",[n._v("off 移除事件监听")])]),n._v(" "),t("li",[t("p",[n._v("jQuery")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import $ from 'jQuery'\n\nconst eventBus = $(window) // const eventBus = $({})\n\neventBus.on('m:update', () => {\n      v.render(m.data.n)\n})\n\neventBus.trigger('m:update')\n\neventBus.off('m:update')\n")])])])]),n._v(" "),t("li",[t("p",[n._v("Vue")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import Vue from 'vue'\nconst EventBus = new Vue()\n\nEventBus.$on('m:update', ()=>{\n     v.render(m.data.n)\n})\n\nEventBus.$emit('m:update',m.data.n)\n\nEventBus.$off('m:update', ()=>{})\n\nEventBus.$once('m:update', ()=>{})\n")])])])])])]),n._v(" "),t("li",[t("p",[n._v("表驱动编程是做什么的")]),n._v(" "),t("ul",[t("li",[n._v("表驱动编程是指把相同或类似类型的事件或者数据做成哈希表，放到一起进行集中操作或处理，方便自动绑定事件。")])])]),n._v(" "),t("li",[t("p",[n._v("理解模块化")]),n._v(" "),t("ul",[t("li",[n._v("模块化就是消除不同文件(模块)之间的耦合，使每个文件(模块)独立起来。这样每个文件(模块)的修改就不会影响到其他文件(模块)，每个模块独立存在，不依赖其他模块，方便更新迭代。")])])]),n._v(" "),t("li",[t("p",[n._v("view = render(data)")]),n._v(" "),t("ul",[t("li",[n._v("只要 data 改变了，就可以调用 render 函数重新渲染 view(React 使用这种思想)")])])]),n._v(" "),t("li",[t("p",[n._v("类什么时候用")]),n._v(" "),t("ul",[t("li",[n._v("相同的代码需要使用多次，就应该使用函数进行封装")]),n._v(" "),t("li",[n._v("相同的属性需要使用多次，就应该做成共用属性(原型或类)")]),n._v(" "),t("li",[n._v("相同的原型需要使用多次，就应该使用继承(EventBus)")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);